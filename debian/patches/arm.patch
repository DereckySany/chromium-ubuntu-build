Index: dev.utopic/third_party/skia/gyp/skia_lib.gyp
===================================================================
--- dev.utopic.orig/third_party/skia/gyp/skia_lib.gyp	2014-08-06 12:47:15.043817072 -0400
+++ dev.utopic/third_party/skia/gyp/skia_lib.gyp	2014-08-06 12:47:15.041817072 -0400
@@ -10,6 +10,7 @@
       'ports.gyp:ports',
       'sfnt.gyp:sfnt',
       'utils.gyp:utils',
+      "<!(echo <(skia_arch_type) <(skia_os) 1>&2)"
     ],
     'conditions': [
       [ 'skia_arch_type == "x86" and skia_os != "android"', {
@@ -18,7 +19,7 @@
           'opts.gyp:opts_sse4',
         ],
       }],
-      [ 'arm_neon == 1', {
+      [ '1', {
         'component_libs': [
           'opts.gyp:opts_neon',
         ],
Index: dev.utopic/ui/base/resource/data_pack.cc
===================================================================
--- dev.utopic.orig/ui/base/resource/data_pack.cc	2014-08-06 12:47:15.043817072 -0400
+++ dev.utopic/ui/base/resource/data_pack.cc	2014-08-06 12:47:15.041817072 -0400
@@ -155,9 +155,11 @@
   // 2) Verify the entries are within the appropriate bounds. There's an extra
   // entry after the last item which gives us the length of the last item.
   for (size_t i = 0; i < resource_count_ + 1; ++i) {
+    uint32 t;
     const DataPackEntry* entry = reinterpret_cast<const DataPackEntry*>(
         mmap_->data() + kHeaderLength + (i * sizeof(DataPackEntry)));
-    if (entry->file_offset > mmap_->length()) {
+    memcpy(&t, &entry->file_offset, 32/8);
+    if (t > mmap_->length()) {
       LOG(ERROR) << "Entry #" << i << " in data pack points off end of file. "
                  << "Was the file corrupted?";
       UMA_HISTOGRAM_ENUMERATION("DataPack.Load", ENTRY_NOT_FOUND,
