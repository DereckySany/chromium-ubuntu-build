Revert part of 80f1e31950c38663e3678b9ba1fb38314e878f54, as it is causing
compile errors on everything besides Clang 7.0.

Index: dev/gpu/command_buffer/client/transfer_buffer_cmd_copy_helpers.h
===================================================================
--- dev.orig/gpu/command_buffer/client/transfer_buffer_cmd_copy_helpers.h
+++ dev/gpu/command_buffer/client/transfer_buffer_cmd_copy_helpers.h
@@ -12,10 +12,10 @@
 namespace gpu {
 
 // Sum the sizes of the types in Ts as CheckedNumeric<T>.
-template <typename T, typename... Ts>
-constexpr base::CheckedNumeric<T> CheckedSizeOfPackedTypes() {
+template <typename... Ts>
+constexpr uint64_t CheckedSizeOfPackedTypes() {
   static_assert(sizeof...(Ts) > 0, "");
-  base::CheckedNumeric<T> checked_elements_size = 0;
+  uint64_t checked_elements_size = 0;
   for (size_t s : {sizeof(Ts)...}) {
     checked_elements_size += s;
   }
@@ -86,12 +86,12 @@ auto CopyArraysToBuffer(uint32_t count,
 
 // Sum the sizes of the types in Ts. This will fail to compile if the result
 // does not fit in T.
-template <typename T, typename... Ts>
-constexpr T SizeOfPackedTypes() {
-  constexpr base::CheckedNumeric<T> checked_elements_size =
-      CheckedSizeOfPackedTypes<T, Ts...>();
-  static_assert(checked_elements_size.IsValid(), "");
-  return checked_elements_size.ValueOrDie();
+template <typename... Ts>
+constexpr uint32_t SizeOfPackedTypes() {
+  constexpr uint64_t checked_elements_size =
+      CheckedSizeOfPackedTypes<Ts...>();
+  static_assert(checked_elements_size < UINT32_MAX , "");
+  return (uint32_t)checked_elements_size;
 }
 
 template <typename... Ts>
