Description: GYP assumes ARMv7 always wants NEON, even if compile flags disable.
Origin: http://code.google.com/p/chromium/issues/detail?id=154107
Author: Chad Miller <chad.miller@canonical.com>
Bug-Chromium: 154107
Bug-Ubuntu: 1084852

Index: dev.trusty/third_party/webrtc/modules/audio_coding/codecs/isac/fix/source/isacfix.gypi
===================================================================
--- dev.trusty.orig/third_party/webrtc/modules/audio_coding/codecs/isac/fix/source/isacfix.gypi	2014-05-01 09:27:00.261176596 -0400
+++ dev.trusty/third_party/webrtc/modules/audio_coding/codecs/isac/fix/source/isacfix.gypi	2014-05-01 09:27:00.249176163 -0400
@@ -74,7 +74,7 @@
             'WEBRTC_LINUX',
           ],
         }],
-        ['(target_arch=="arm" and arm_version==7) or target_arch=="armv7"', {
+        ['(target_arch=="arm" and arm_version==7 and arm_neon==1) or target_arch=="armv7"', {
           'dependencies': [ 'isac_neon', ],
           'sources': [
             'lattice_armv7.S',
Index: dev.trusty/third_party/webrtc/system_wrappers/source/cpu_features.cc
===================================================================
--- dev.trusty.orig/third_party/webrtc/system_wrappers/source/cpu_features.cc	2014-05-01 09:27:00.261176596 -0400
+++ dev.trusty/third_party/webrtc/system_wrappers/source/cpu_features.cc	2014-05-01 09:27:00.257176452 -0400
@@ -18,6 +18,47 @@
 
 #include "webrtc/typedefs.h"
 
+#include <elf.h>
+#ifdef __arm__
+#include <fcntl.h>
+#include <unistd.h>
+#include <linux/auxvec.h>
+#include <asm/hwcap.h>
+#endif
+
+#ifdef __arm__
+uint64_t WebRtc_GetCPUFeaturesARM() {
+	static bool detected = false;
+	static uint64_t have_neon = 0;
+
+	int fd;
+	Elf32_auxv_t auxv;
+	unsigned int hwcaps;
+
+	if (!detected) {
+		int fd;
+		Elf32_auxv_t auxv;
+		unsigned int hwcaps;
+
+		fd = open("/proc/self/auxv", O_RDONLY);
+		if (fd >= 0) {
+			while (read(fd, &auxv, sizeof(Elf32_auxv_t)) == sizeof(Elf32_auxv_t)) {
+				if (auxv.a_type == AT_HWCAP) {
+					have_neon = (auxv.a_un.a_val & HWCAP_NEON) ? kCPUFeatureNEON : 0;
+					break;
+				}
+			}
+			close (fd);
+		} else {
+			have_neon = 0;
+		}
+		detected = true;
+	}
+
+	return 0 | have_neon; // others here as we need them
+}
+#endif
+
 // No CPU feature is available => straight C path.
 int GetCPUInfoNoASM(CPUFeature feature) {
   (void)feature;
