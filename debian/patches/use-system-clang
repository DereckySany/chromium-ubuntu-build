Description: Use the system clang instead of the one that is (not really)
 inside the source tree.
Author: Chad Miller <chad.miller@canonical.com>

Index: beta/build/common.gypi
===================================================================
--- beta.orig/build/common.gypi
+++ beta/build/common.gypi
@@ -2401,8 +2401,8 @@
       }],
 
       ['host_clang==1', {
-        'host_cc': '<(make_clang_dir)/bin/clang',
-        'host_cxx': '<(make_clang_dir)/bin/clang++',
+        'host_cc': 'clang',
+        'host_cxx': 'clang++',
       }, {
         'host_cc': '<!(which gcc)',
         'host_cxx': '<!(which g++)',
Index: beta/build/config/compiler/BUILD.gn
===================================================================
--- beta.orig/build/config/compiler/BUILD.gn
+++ beta/build/config/compiler/BUILD.gn
@@ -379,15 +379,6 @@ config("compiler") {
     cflags += [ "-fcolor-diagnostics" ]
   }
 
-  # Makes builds independent of absolute file path.
-  # clang-cl (used if is_win) doesn't expose this flag.
-  # Currently disabled for nacl since its toolchain lacks this flag (too old).
-  # TODO(zforman): Once nacl's toolchain is updated, remove check.
-  if (is_clang && is_linux) {
-    absolute_path = rebase_path("//.")
-    cflags += [ "-fdebug-prefix-map=$absolute_path=." ]
-  }
-
   # C++11 compiler flags setup.
   # ---------------------------
   if (is_linux || is_android || (is_nacl && is_clang)) {
Index: beta/build/toolchain/gcc_toolchain.gni
===================================================================
--- beta.orig/build/toolchain/gcc_toolchain.gni
+++ beta/build/toolchain/gcc_toolchain.gni
@@ -511,9 +511,8 @@ template("clang_toolchain") {
   }
 
   gcc_toolchain(target_name) {
-    prefix = rebase_path("$clang_base_path/bin", root_build_dir)
-    cc = "$prefix/clang"
-    cxx = "$prefix/clang++"
+    cc = "clang-3.6"
+    cxx = "clang++-3.6"
     ld = cxx
     is_clang = true
 
